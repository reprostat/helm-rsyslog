apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "rsyslog.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ template "rsyslog.fullname" . }}
    release: {{ .Release.Name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicas }}
  {{- end }}  
  selector:
    matchLabels: {{ include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ template "rsyslog.fullname" . }}
  {{- if .Values.updateStrategy }}      
  updateStrategy:
  {{ toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}      
  template:
    metadata:
      labels:  {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: {{ template "rsyslog.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "rsyslog.fullname" . }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
        
      {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30      
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          
          volumeMounts:
          {{ if .Values.volumeMounts }}
          {{ toYaml .Values.volumeMounts | nindent 8 }}
          {{ end }}
            
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          ports:
          - containerPort: {{ .Values.port }}
            name: rsyslog-port
            protocol: TCP
          
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: rsyslog-port
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: rsyslog-port
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            tcpSocket:
              port: rsyslog-port
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: logs
              mountPath: /var/log
      volumes:
      {{- if .Values.persistence.enabled }}
      {{- if .Values.persistence.existingClaim }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}
      {{- end }}
  {{- if and (not .Values.persistence.existingClaim)  .Values.persistence.enabled }}      
  volumeClaimTemplates:
    - metadata:
        name: logs
        annotations:
        {{- range $key, $value := .Values.persistence.annotations }}
          {{ $key }}: {{ $value }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- else if (not .Values.persistence.enabled) }}
        - name: logs
          emptyDir: {}
  {{- end }}